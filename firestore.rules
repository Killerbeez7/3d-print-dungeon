rules_version = '2';


service cloud.firestore {
  match /databases/{database}/documents {

    // ------------- Helpers --------------
    function isSignedIn()   { return request.auth != null; }
    function isAdmin()      { return request.auth.token.admin  == true; }
    function isSuperAdmin() { return request.auth.token.super  == true; }

    // -------------- Admins List--------------
    match /admins/{uid} {
    allow read : if isAdmin();
    allow write: if isSuperAdmin(); 
    }

    // -------------- Users --------------
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth.uid == userId;
      // Allow user to update their own profile fields, but NOT 'roles'
      allow update: if request.auth.uid == userId
        && !('roles' in request.resource.data.diff(resource.data).affectedKeys())
        && request.resource.data.diff(resource.data).affectedKeys().hasOnly([
          'displayName', 'photoURL', 'bio', 'city', 'country',
          'coverURL',  'email', 'searchableName', 'socials',
          'uploads', 'upscalePhotoURL', 'createdAt', 'artist'
        ]);
      // Only admin or super admin can update roles field
      allow update: if (isAdmin() || isSuperAdmin())
        && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['roles']);
      allow delete: if false;
    }


    // -------------- Models --------------
    match /models/{modelId} {
      allow read:   if true;
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn()
        && (resource.data.uploaderId == request.auth.uid || isAdmin());
    }
    
    // -------------- Likes --------------
    match /likes/{likeId} {
      allow read: if true;
      allow write: if isSignedIn();
    }

    // -------------- Comments --------------
    match /comments/{commentId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() 
        && (resource.data.userId == request.auth.uid || isAdmin());
    }

    // -------------- Site Settings --------------
    match /settings/{doc} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // -------------- Reports --------------
    match /reports/{reportId} {
      allow read: if isAdmin();
      allow create: if isSignedIn();
      allow update, delete: if isAdmin();
    }

    // -------------- Analytics --------------
    match /analytics/{analyticsId} {
      allow read, write: if isAdmin();
    }
    match /analytics/{analyticsId}/{subcollection}/{subDocId} {
      allow read, write: if isAdmin();
    }


    // -------------- ViewTrackers --------------
    match /viewTrackers/{viewId} {
      allow read: if true;
      allow create: if true;
      allow update: if isSignedIn();
      allow delete: if isAdmin();
    }

    // -------------- UserViews --------------
    match /userViews/{viewId} {
      allow read: if true;
      allow create, update: if isSignedIn();
      allow delete: if isAdmin();
    }
    

    // -------------- Forum --------------
    match /forumCategories/{categoryId} {
      allow read: if true;  // Public categories
      allow create, update, delete: if isAdmin();
    }

    match /forumThreads/{threadId} {
      allow read: if true;  // Public threads
      allow create: if isSignedIn();
      // Only thread author, moderators or admins can update/delete
      allow update, delete: if isSignedIn() && 
        (resource.data.authorId == request.auth.uid || isAdmin());
    }

    match /forumReplies/{replyId} {
      allow read: if true;  // Public replies
      allow create: if isSignedIn();
      // Only reply author, moderators or admins can update/delete
      allow update, delete: if isSignedIn() && 
        (resource.data.authorId == request.auth.uid || isAdmin());
    }

    match /forumThreadLikes/{likeId} {
      allow read: if true;
      allow create, delete: if isSignedIn();
    }

    match /forumUserProfiles/{userId} {
      allow read: if true;
      allow write: if isSignedIn() && 
        (request.auth.uid == userId || isAdmin());
    }
  }
}

